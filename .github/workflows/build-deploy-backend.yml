name: build-backend
on:
  push:
    branches: [main]
jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Create docker image
        working-directory: ./backend
        run: DOCKER_BUILDKIT=1 docker build --output type=tar,dest=backend_webserver_docker_image.tar .
      - uses: actions/upload-artifact@v3
        with:
          name: backend_webserver_docker_image.tar
          path: backend/backend_webserver_docker_image.tar

  deploy-backend:
    if: ${{ startsWith(github.ref, 'refs/heads/main') }}
    needs: build-backend
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download frontend webserver Docker image
        uses: actions/download-artifact@v1
        with:
          name: backend_webserver_docker_image.tar

      - name: Configure AWS login
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Upload Docker image to AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: backend_webserver
        run: |
          docker import backend_webserver_docker_image.tar/backend_webserver_docker_image.tar backend_webserver
          docker tag backend_webserver 186932938567.dkr.ecr.us-east-1.amazonaws.com/backend_webserver
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
